/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import AccesoADatos.AlumnoData;
import AccesoADatos.InscripcionData;
import Universidad.Entidades.Alumno;
import Universidad.Entidades.Inscripcion;
import Universidad.Entidades.Materia;
import java.sql.Date;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tex
 */
public class ManejoDeInscripciones extends javax.swing.JInternalFrame {

    private DefaultTableModel modelo = new DefaultTableModel();

    public ManejoDeInscripciones() {
        initComponents();
        cargarComboAlumnos();
        armarCabevera();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jCBAlumnos = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jRINcriptas = new javax.swing.JRadioButton();
        jRNoInscriptas = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTMaterias = new javax.swing.JTable();
        jBInscribir = new javax.swing.JButton();
        jBAnularINscripcion = new javax.swing.JButton();
        jBSalir = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("FORMULARIO DE INSCRIPCION");

        jLabel2.setText("SELECCIONE UN ALUMNO");

        jCBAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBAlumnosActionPerformed(evt);
            }
        });

        jLabel3.setText("LISTADO DE MATERIAS");

        buttonGroup1.add(jRINcriptas);
        jRINcriptas.setText("MATERIAS INSCRIPTAS");
        jRINcriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRINcriptasActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRNoInscriptas);
        jRNoInscriptas.setText("MATERIAS NO INSCRIPTAS");
        jRNoInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRNoInscriptasActionPerformed(evt);
            }
        });

        jTMaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane1.setViewportView(jTMaterias);

        jBInscribir.setText("INSCRIBIR");
        jBInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBInscribirActionPerformed(evt);
            }
        });

        jBAnularINscripcion.setText("ANULAR INSCRIPCION");
        jBAnularINscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAnularINscripcionActionPerformed(evt);
            }
        });

        jBSalir.setText("SALIR");
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 59, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(46, 46, 46)
                                .addComponent(jCBAlumnos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jBInscribir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBAnularINscripcion)
                                .addGap(106, 106, 106)
                                .addComponent(jBSalir))
                            .addComponent(jScrollPane1))
                        .addGap(25, 25, 25))))
            .addGroup(layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(jRINcriptas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jRNoInscriptas)
                .addGap(73, 73, 73))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(106, 106, 106))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(218, 218, 218))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRINcriptas)
                    .addComponent(jRNoInscriptas))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBInscribir)
                    .addComponent(jBAnularINscripcion)
                    .addComponent(jBSalir))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCBAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBAlumnosActionPerformed
    if (jRINcriptas.isSelected()) {
    jRINcriptas.doClick();
    }else if (jRNoInscriptas.isSelected()){
    jRNoInscriptas.doClick();
    }

    }//GEN-LAST:event_jCBAlumnosActionPerformed

    private void jRINcriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRINcriptasActionPerformed
        // TODO add your handling code here:
       InscripcionData inscripcionD = new InscripcionData(); 
       List<Materia> materiasInscriptas = new ArrayList<>();
       String idalumno = (String) jCBAlumnos.getSelectedItem();
        String[] parte = idalumno.split(",");
        int id = Integer.parseInt(parte[0]);
        materiasInscriptas = inscripcionD.obtenerMateriasCursadas(id);
        borrarFilas();
        for (Materia mat : materiasInscriptas) {
            modelo.addRow(new Object[]{
                mat.getIdMateria(),
                mat.getNombre(),
                mat.getAño()
            });
        }
        
    }//GEN-LAST:event_jRINcriptasActionPerformed

    private void jBAnularINscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAnularINscripcionActionPerformed
        // TODO add your handling code here:
        int idAlumno;
        int idMateria;
        InscripcionData inscripcionD = new InscripcionData();
        String alumno = (String) jCBAlumnos.getSelectedItem();
        String[] parte = alumno.split(",");
        idAlumno = Integer.parseInt(parte[0]);
        idMateria=(int) (modelo.getValueAt(jTMaterias.getSelectedRow(),0));
        inscripcionD.borrarInscripcionMateriaAlumno(idAlumno, idMateria);
        jRINcriptas.doClick();
    }//GEN-LAST:event_jBAnularINscripcionActionPerformed

    private void jRNoInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRNoInscriptasActionPerformed
        InscripcionData inscripcionD = new InscripcionData();
        List<Materia> materiasNoInscriptas = new ArrayList<>();
        String idalumno = (String) jCBAlumnos.getSelectedItem();
        String[] parte = idalumno.split(",");
        int id = Integer.parseInt(parte[0]);
        materiasNoInscriptas = inscripcionD.obtenerMateriasNoCursadas(id);
        borrarFilas();
        for (Materia mat : materiasNoInscriptas) {
            modelo.addRow(new Object[]{
                mat.getIdMateria(),
                mat.getNombre(),
                mat.getAño()
            });
        }
    }//GEN-LAST:event_jRNoInscriptasActionPerformed

    private void jBInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBInscribirActionPerformed
        // TODO add your handling code here:
        Materia materia = new Materia();
        Alumno alumno = new Alumno();
        Inscripcion inscripcion = new Inscripcion();
        InscripcionData inscripcionD = new InscripcionData();
        String idalumno = (String) jCBAlumnos.getSelectedItem();
        String[] parte = idalumno.split(",");
        alumno.setIdAlumno(Integer.parseInt(parte[0].trim()));
        alumno.setDni(Integer.parseInt(parte[1].trim()));
        alumno.setApellido(parte[2]);
        alumno.setNombre(parte[3]);
        alumno.setFechaNacimiento(Date.valueOf(parte[4].trim()).toLocalDate() );
        alumno.setEstado(true);
        
        materia.setIdMateria((int) (modelo.getValueAt(jTMaterias.getSelectedRow(),0)));
        materia.setNombre((String) modelo.getValueAt(jTMaterias.getSelectedRow(),1));
        materia.setAño((int) (modelo.getValueAt(jTMaterias.getSelectedRow(),2)));
        materia.setEstado(true);
        
        inscripcion.setAlumno(alumno);
        inscripcion.setMateria(materia);
        
        inscripcionD.guardarInscripcion(inscripcion);
        jRNoInscriptas.doClick();
    }//GEN-LAST:event_jBInscribirActionPerformed

    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jBSalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBAnularINscripcion;
    private javax.swing.JButton jBInscribir;
    private javax.swing.JButton jBSalir;
    private javax.swing.JComboBox<String> jCBAlumnos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton jRINcriptas;
    private javax.swing.JRadioButton jRNoInscriptas;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTMaterias;
    // End of variables declaration//GEN-END:variables
public void armarCabevera() {
        modelo.addColumn("ID");
        modelo.addColumn("NOMBRE");
        modelo.addColumn("AÑO");
        jTMaterias.setModel(modelo);
    }

    public void cargarComboAlumnos() {
        AlumnoData alumnoD = new AlumnoData();
        List<Universidad.Entidades.Alumno> alumnos = new ArrayList<>();
        alumnos = alumnoD.listarAlumno();
        for (Universidad.Entidades.Alumno alu : alumnos) {
            jCBAlumnos.addItem(alu.toString());
        }
    }

    public void borrarFilas() {
        int fila = jTMaterias.getRowCount() - 1;
        for (; fila >= 0; fila--) {
            modelo.removeRow(fila);
        }

    }
}
